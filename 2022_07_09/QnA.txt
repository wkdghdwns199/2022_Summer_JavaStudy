* ArrayList 에서 추가, 삭제를 할 때 왜 어려운가?
	- ArrayList 이 선언되고 메모리를 할당 할 때 크기(방의 갯수)가 정해져 있어서, 데이터를 추가할 경우 만약 ArrayList 에서 개수를 초과하는 방을 요청할 수 없고, 특정한 데이터를 삭제를 할 때는 특정 데이터를 찾을 때 시간이 오래 걸라기 때문

	* 어렵다의 정의 -> 시간이 오래 걸린다, 오류가 자주 발생한다.

* ArrayList 에서 개수를 초과하는 인덱스를 요청하면 어떻게 되는가
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 5 
라는 에러 메세지가 뜸. 즉, ArrayIndexOutOfBoundsException 클래스를 불러오게 된다

* LinkedList 는 왜 순서대로 저장하지 않을까요? 어떤 특징 때문에?
	- 프로그램을 실행다는 것은 > 하드디스크에 있는 코드, 데이터를 OS 가 읽어서 프로세스로 만드		는 것을 의미 > 프로세스는 운영체제에 의해 특정 공간에 할당 > 어셈블리를 분석하면 실제 주	      소가 아님 > 시작지점을 0으로 생각하고 쓰는 논리적 주소로 사용
	
	- 추가 를 할 때는 메모리 공간이 무한대로 가정한다면 무한정 linking 하면서 추가를 할 수 있음
	- 삭제할 때는 데이터를 찾아서 삭제 후 배열 처럼 전체적인 shift 가 불필요하여서 처리 속도가		빠름


* 코드를 돌려보고 예외가 메서드를 던졌는데, 처리하지 않는다면 어떻게 되는가
	- 던진 그 시점에서 바로 에러를 띄우고 프로세스를 종료한다

* 왜 이렇게 변태같이 사용하냐
	> 다른 OS에서도 돌아가게 하려고




1.	지역변수와 전역변수의 차이는 무엇인가?
